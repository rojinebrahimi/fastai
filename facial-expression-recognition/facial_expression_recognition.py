# -*- coding: utf-8 -*-
"""facial-expression-recognition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Yb0yJMWizPHpOVcK-0VVWWZ0-ik2DyXs

# **Environment Preparation**
"""

# Commented out IPython magic to ensure Python compatibility.
# %reload_ext autoreload
# %autoreload 2
# %matplotlib inline

from google.colab import drive
drive.mount('/content/gdrive', force_remount=True)
root = '/content/gdrive/My Drive'
base_dir = root + 'fastai-v3'

from fastai import *
from fastai.vision import *

path = Path('/facial-expressions')
path.mkdir(parents=True, exist_ok=True)

path

"""CK+48 is a facial expression dataset you can find at: https://www.kaggle.com/shawon10/ckplus/download"""

!unzip -o ckplus.zip

!mv ck/ '/facial-expressions/'

path = '/content/CK+48'
path

"""# **Creating DataBunch**"""

data = ImageDataBunch.from_folder(path, valid_pct=0.2, bs=32).normalize(imagenet_stats)

data.c

data.classes

len(data.train_ds)

len(data.valid_ds)

data.show_batch(row=4, figsize=(7, 7))

"""# **Training the data**"""

learn = cnn_learner(data, models.resnet34, metrics=[accuracy, error_rate])

learn.fit_one_cycle(7)

learn.save('stage-1')

learn.load('stage-1')

"""unfreeze the Learner Object to train the whole model and find the best learning rate"""

learn.unfreeze()
learn.lr_find()

learn.recorder.plot()

learn.load('stage-1')
learn.fit_one_cycle(7, max_lr=5e-05)

learn.save('stage-2')

learn.load('stage-2')

interpt = ClassificationInterpretation.from_learner(learn)

interpt.plot_confusion_matrix()

interpt.plot_top_losses(16)

interpt.most_confused(min_val=2)

learn.export()

"""## **Prediction**

choose the image to predict(provide the path)
"""

image_to_pred = open_image('/content/CK+48/happy/S014_005_00000017.png')
image_to_pred

"""load the exported learner object"""

load_learner('/content/CK+48/')

preds, true_y, indx = learn.predict(image_to_pred)

preds

true_y

indx